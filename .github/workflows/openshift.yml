# This example workflow will build container image
# of the application using source to image build
# startegy and push the image to ghcr.io (Image registry)

# https://redhat-scholars.github.io/openshift-starter-guides/rhs-openshift-starter-guides/4.7/nationalparks-java-codechanges-github-actions.html

name: S2I build and push

env: 
  # IMAGE_REGISTRY: quay.io/${{ secrets.QUAY_USERNAME }}
  # REGISTRY_USER: ${{ secrets.QUAY_USERNAME }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}
  # IMAGE_TAGS: latest ${{ github.sha }}
  # REGISTRY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
  APP_NAME: hugo-workshop
  IMAGE_TAGS: latest

  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE: "%PROJECT%"

  APP_PORT: "8080"

on:
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows
  workflow_dispatch:
  push:
    # Edit to the branch(es) you want to build and deploy on each push.
    branches: [ "main" ]

jobs:
  build-and-push: 
    name: Build s2i
    runs-on: ubuntu-latest
    environment: development

    outputs:
        ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
        SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup S2i and Build container image
      - name: Setup and Build
        id: build_image
        uses: redhat-actions/s2i-build@v2.2
        with:
          path_context: '.'
          # Builder image for a nginx
          builder_image: 'quay.io/sclorg/nginx-120-c9'
          image: ${{ env.APP_NAME }}
          tags: ${{ env.IMAGE_TAGS }}

      # Push Image to Quay registry
      # - name: Push To Quay Action
      #   id: push-to-quay
      #   uses: redhat-actions/push-to-registry@v2
      #   with:
      #     image: ${{ steps.build_image.outputs.image }}
      #     tags: ${{ steps.build_image.outputs.tags }}
      #     registry: ${{ env.IMAGE_REGISTRY }}
      #     username: ${{ env.REGISTRY_USER }}
      #     password: ${{ env.REGISTRY_PASSWORD }}
          # https://github.com/redhat-actions/push-to-registry#readme

      - name: Push to Registry 
        id: push-to-registry
        uses: redhat-actions/push-to-registry@v2.6
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      # - name: Print image url
      #   run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"    # The path the image was pushed to is now stored in ${{ steps.push-to-registry.outputs.registry-path }}

    # https://github.com/redhat-actions/oc-login#readme
      - name: Log in to OpenShift 
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
          openshift_token: ${{ env.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}

      # Run a script to create a new app or update the current one with the previously pushed container image
      - run: | 
            "${GITHUB_WORKSPACE}/.github/script.sh" ${{ env.APP_NAME }} ${{ env.IMAGE_REGISTRY }}/${{ steps.build_image.outputs.image }}:${{ github.sha }} ${{ env.OPENSHIFT_NAMESPACE }}
